namespace ReadFileLinesEnumGenerator;

internal class SourceGenerator
{
    public string Namespace { get; init; } = null!;
    public IdentifierRegularizer IdentifierRegularizer { get; init; } = null!;

    public (string hintName, string body) Generate(string typeName, string[] enumValues)
    {
        return (GetHintName(typeName), GenerateBody(typeName, enumValues));
    }

    private string GenerateBody(string typeName, string[] enumValues)
    {
        return $@"
// <auto-generated/>
#pragma warning disable CS8931

namespace {Namespace}
{{ 
    public enum {typeName}
    {{ 
        {string.Join(", ", enumValues.Select(IdentifierRegularizer.Regularize))} 
    }}

    public static class {typeName}Extensions
    {{
        public static string ToStringValue(this {typeName} value)
        {{
             {string.Join("\n", enumValues.Select(ev => $"if (value == {typeName}.{IdentifierRegularizer.Regularize(ev)}) return \"{ev}\";"))}
             throw new ArgumentOutOfRangeException(nameof(value), value, null);
        }}
   }}
}}
";
    }

    private string GetHintName(string typeName)
    {
        return $"{Namespace}_{typeName}.g.cs";
    }
}