namespace ReadFileLinesEnumGenerator;

internal class SourceGenerator
{
    public string Namespace { get; init; } = null!;
    public IdentifierRegularizer IdentifierRegularizer { get; init; } = null!;

    public (string hintName, string body)? Generate(string typeName, string[] enumValues)
    {
        var body = GenerateBody(typeName, enumValues);
        return body is null
            ? null
            : (GetHintName(typeName), body);
    }

    private string? GenerateBody(string typeName, string[] enumValues)
    {
        return !enumValues.Any()
            ? null
            : $@"
// <auto-generated/>
namespace {Namespace} 
{{ 
    public enum {typeName} 
    {{ 
        {string.Join(", ", enumValues.Select(GetEnumSegment))} 
    }} 
}}
";
    }

    private string GetEnumSegment(string enumValue)
    {
        return $@"[StringValue(""{enumValue}"")] {IdentifierRegularizer.Regularize(enumValue)}";
    }

    private string GetHintName(string typeName)
    {
        return $"{Namespace}.{typeName}";
    }
}